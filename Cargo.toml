[package]
name = "ezsp"
description = "Ember ZNet Serial Protocol"
license = "MIT"
repository = "https://github.com/PaulmannLighting/ezsp"
keywords = ["Ember", "ZNet", "Serial"]
categories = ["hardware-support", "network-programming"]
documentation = "https://www.silabs.com/documents/public/user-guides/ug100-ezsp-reference-guide.pdf"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
num-derive = "0.4"
num-traits = "0.2"
rw-exact-ext = { git = "https://github.com/PaulmannLighting/rw-exact-ext.git", version = "0.1", features = ["num-traits", "heapless"] }
serialport = { version = "4.3", default-features = false }
siliconlabs = { git = "ssh://git@github.com/PaulmannLighting/siliconlabs.git", version = "0.2", features = ["le-stream"] }
ashv2 = { git = "https://github.com/PaulmannLighting/ashv2.git", version = "0.1", optional = true }
le-stream = { version = "0.2", features = ["derive", "heapless"] }
log = "0.4"
heapless = "0.8"
itertools = "0.13"

[features]
ashv2 = ["dep:ashv2"]

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
elided_lifetimes_in_paths = "warn"
keyword_idents = { level = "warn", priority = -1 }
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_docs = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unsafe_code = "warn"
unstable_features = "warn"
unused_crate_dependencies = "warn"
unused_imports = "allow"
unused_qualifications = "warn"
variant_size_differences = "warn"
for_loops_over_fallibles = "warn"
redundant_lifetimes = "warn"

[lints.clippy]
pedantic = { level = "warn", priority = -90 }
nursery = { level = "warn", priority = -95 }
perf = { level = "warn", priority = -95 }
suspicious = { level = "warn", priority = -95 }
complexity = { level = "warn", priority = -100 }
cargo = { level = "warn", priority = -95 }
all = { level = "warn", priority = -98 }

incompatible_msrv = "warn"
as_ptr_cast_mut = "warn"
clear_with_drain = "warn"
collection_is_never_read = "warn"
debug_assert_with_mut_call = "warn"
deref_by_slicing = "warn"
empty_enum_variants_with_brackets = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
mem_forget = "warn"
needless_collect = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
panic_in_result_fn = "warn"
path_buf_push_overwrite = "warn"
# pathbuf_init_then_push = "warn"
unwrap_in_result = "warn"
verbose_file_reads = "warn"
useless_let_if_seq = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_type_annotations = "warn"
string_add = "warn"
string_slice = "warn"
string_to_string = "warn"
trailing_empty_array = "warn"
transmute_undefined_repr = "warn"
unnecessary_self_imports = "warn"
# unused_result_ok = "warn"

cast_lossless = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
collapsible_else_if = "allow"
default_trait_access = "allow"
doc_markdown = "allow"
enum_glob_use = "allow"
if_not_else = "allow"
ignored_unit_patterns = "allow"
inline_always = "allow"
len_without_is_empty = "allow"
len_zero = "allow"
manual_assert = "allow"
map_unwrap_or = "allow"
match_same_arms = "allow"
missing_safety_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
needless_raw_string_hashes = "allow"
new_without_default = "allow"
redundant_closure = "allow"
redundant_closure_for_method_calls = "allow"
redundant_field_names = "allow"
similar_names = "allow"
struct_field_names = "allow"
unreadable_literal = "allow"
wildcard_imports = "allow"